---
export interface Props {
  title: string;
  description?: string;
  keywords?: string;
}

const { title, description = "Professional home remodeling services by Jeffery Lincoln. Carpentry, plumbing, electrical, and general remodeling throughout Upstate South Carolina. Licensed and insured.", keywords = "home remodeling, carpentry, plumbing, electrical, Upstate South Carolina, Jeffery Lincoln, renovation, home improvement" } = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

// Import CSS
import '../styles/global.css';
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="author" content="Jeffery Lincoln - Upstate Home Remodel" />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:site_name" content="Upstate Home Remodel" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    
    <!-- Local Business Schema -->
    <script type="application/ld+json" is:inline>
      {
        "@context": "https://schema.org",
        "@type": "LocalBusiness",
        "name": "Upstate Home Remodel",
        "description": "Professional home remodeling services including carpentry, plumbing, electrical, and general remodeling",
        "owner": {
          "@type": "Person",
          "name": "Jeffery Lincoln"
        },
        "telephone": "(864) 608-3326",
        "url": "https://lincolnlogshms.com",
        "address": {
          "@type": "PostalAddress",
          "addressRegion": "SC",
          "addressCountry": "US"
        },
        "areaServed": {
          "@type": "State",
          "name": "Upstate South Carolina"
        },
        "serviceType": ["Home Remodeling", "Carpentry", "Plumbing", "Electrical Work", "General Contracting"],
        "priceRange": "$$"
      }
    </script>
    
    
    <!-- Material Icons -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons" />
    <link rel="stylesheet" href="https://use.typekit.net/etn8inn.css">
    
    <!-- Favicon -->
    <link rel="icon" type="image/png" href="/favicon.png" />
    
    <title>{title}</title>
  </head>
  <body>
    <slot />
    
    <!-- Navigation and interactions -->
    <script is:inline>
      document.addEventListener('DOMContentLoaded', function() {
        const header = document.querySelector('.header');
        
        // Mobile menu toggle
        const mobileToggle = document.querySelector('.mobile-menu-toggle');
        const navMenu = document.querySelector('.nav__menu');
        
        if (mobileToggle && navMenu) {
          mobileToggle.addEventListener('click', function() {
            navMenu.classList.toggle('active');
            
            // Update aria-expanded attribute
            const isExpanded = navMenu.classList.contains('active');
            mobileToggle.setAttribute('aria-expanded', isExpanded.toString());
          });
          
          // Close mobile menu when clicking on a link
          const navLinks = navMenu.querySelectorAll('.nav__link');
          navLinks.forEach(function(link) {
            link.addEventListener('click', function() {
              navMenu.classList.remove('active');
              mobileToggle.setAttribute('aria-expanded', 'false');
            });
          });
          
          // Close mobile menu when clicking outside
          document.addEventListener('click', function(e) {
            if (header && !header.contains(e.target)) {
              navMenu.classList.remove('active');
              mobileToggle.setAttribute('aria-expanded', 'false');
            }
          });
        }
        
        // Active navigation link highlighting
        const currentPath = window.location.pathname;
        const navLinks = document.querySelectorAll('.nav__link');
        
        navLinks.forEach(function(link) {
          const linkPath = new URL(link.href).pathname;
          if (currentPath === linkPath || (currentPath === '/' && linkPath === '/')) {
            link.classList.add('active');
          }
        });
        
        // Smooth scrolling for anchor links
        const anchorLinks = document.querySelectorAll('a[href^="#"]');
        anchorLinks.forEach(function(link) {
          link.addEventListener('click', function(e) {
            e.preventDefault();
            const href = this.getAttribute('href');
            if (href) {
              const targetId = href.substring(1);
              const targetElement = document.getElementById(targetId);
              
              if (targetElement) {
                const headerHeight = header ? header.offsetHeight : 0;
                const targetPosition = targetElement.offsetTop - headerHeight - 20;
                
                window.scrollTo({
                  top: targetPosition,
                  behavior: 'smooth'
                });
              }
            }
          });
        });
        
        
        // Simple sticky header behavior (native implementation)
        let lastScrollY = window.scrollY;
        
        window.addEventListener('scroll', function() {
          const currentScrollY = window.scrollY;
          
          if (header) {
            if (currentScrollY > 100) {
              header.classList.add('scrolled');
              
              if (currentScrollY > lastScrollY) {
                // Scrolling down - hide header
                header.classList.add('hidden');
              } else {
                // Scrolling up - show header
                header.classList.remove('hidden');
              }
            } else {
              header.classList.remove('scrolled', 'hidden');
            }
          }
          
          lastScrollY = currentScrollY;

          if (navMenu.classList.contains('active')) {
            navMenu.classList.remove('active');
            mobileToggle.setAttribute('aria-expanded', 'false');
          }
        });
      });
    </script>
  </body>
</html>

